{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst button = document.querySelector('[data-start]');\n\nconst daysData = document.querySelector('[data-days]');\nconst hoursData = document.querySelector('[data-hours]');\nconst minutesData = document.querySelector('[data-minutes]');\nconst secondsData = document.querySelector('[data-seconds]');\n\nconst TIME_DELAY = 1000;\nlet intervalId = null;\n\nbutton.disabled = true;\n\nlet pickedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    pickedDate = selectedDates[0];\n\n    if (pickedDate < Date.now()) {\n      iziToast.error({\n        message: 'Please choose the date in the future',\n        position: 'topRight',\n      });\n\n      button.disabled = true;\n\n      return;\n    }\n    button.disabled = false;\n\n    console.log(pickedDate);\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst addLeadingZero = value => {\n  return value.toString().padStart(2, '0');\n};\n\nconst handleClickFunc = () => {\n  button.disabled = true;\n\n  if (intervalId !== null) {\n    clearInterval(intervalId);\n  }\n\n  const currentDate = Date.now();\n  let diff = pickedDate - currentDate;\n\n  intervalId = setInterval(() => {\n    const timeRemains = convertMs(diff);\n\n    daysData.textContent = addLeadingZero(timeRemains.days);\n    hoursData.textContent = addLeadingZero(timeRemains.hours);\n    minutesData.textContent = addLeadingZero(timeRemains.minutes);\n    secondsData.textContent = addLeadingZero(timeRemains.seconds);\n\n    diff -= TIME_DELAY;\n\n    if (diff <= 0) {\n      clearInterval(intervalId);\n    }\n  }, TIME_DELAY);\n};\n\nbutton.addEventListener('click', handleClickFunc);\n"],"names":["button","daysData","hoursData","minutesData","secondsData","TIME_DELAY","intervalId","pickedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","handleClickFunc","currentDate","diff","timeRemains"],"mappings":"+IAMA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAE9CC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAErDC,EAAa,IACnB,IAAIC,EAAa,KAEjBN,EAAO,SAAW,GAElB,IAAIO,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFAF,EAAaE,EAAc,CAAC,EAExBF,EAAa,KAAK,MAAO,CAC3BG,EAAS,MAAM,CACb,QAAS,uCACT,SAAU,UAClB,CAAO,EAEDV,EAAO,SAAW,GAElB,MACD,CACDA,EAAO,SAAW,GAElB,QAAQ,IAAIO,CAAU,CACvB,CACH,EAEAI,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAiBC,GACdA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAGnCC,EAAkB,IAAM,CAC5BpB,EAAO,SAAW,GAEdM,IAAe,MACjB,cAAcA,CAAU,EAG1B,MAAMe,EAAc,KAAK,MACzB,IAAIC,EAAOf,EAAac,EAExBf,EAAa,YAAY,IAAM,CAC7B,MAAMiB,EAAcX,EAAUU,CAAI,EAElCrB,EAAS,YAAciB,EAAeK,EAAY,IAAI,EACtDrB,EAAU,YAAcgB,EAAeK,EAAY,KAAK,EACxDpB,EAAY,YAAce,EAAeK,EAAY,OAAO,EAC5DnB,EAAY,YAAcc,EAAeK,EAAY,OAAO,EAE5DD,GAAQjB,EAEJiB,GAAQ,GACV,cAAchB,CAAU,CAE3B,EAAED,CAAU,CACf,EAEAL,EAAO,iBAAiB,QAASoB,CAAe"}